% Algoritma ini mendapat inspirasi dari buku Matrix Computatons, Golub and Van Loan dan http://faculty.nps.edu/borges/Teaching/MA3046/Matlab/qrlsdiary.html% copyright Satria Bagus W - 1506689156% Fungsi yang menerima matrix a dan mengembalikan matrix Q, R dan Matrix Pivotfunction [Q, R, piv] = householder(A)  [m, n] = size(A);  %Inisiasi matrix Q, R, matrix c  dan matrix pivot  Q = eye(m); R = A; c = zeros(1,n); piv = eye(n);  %inisiasi matrix c dengan nilai norm kolom  for j = 1:n    c(j) = norm(A(:,j));  end  %inisiasi variable gamma sebagai rank dan tau sebagai nilai norm kolom terbesar  gamma = 0; tau = max(c); k = 0;  %cari row dengan norm kolom terbesar  for j = 1:n    if c(j) == tau;      k = j;      break    end  endfor  while tau > 0    gamma = gamma + 1;    %melakukan pivoting kolom berdasarkan norm    temp = piv(:,gamma); piv(:,gamma) = piv(:,k); piv(:,k) = temp;    temp = R(1:m, gamma); R(1:m, gamma) = R(1:m, k); R(1:m, k) = temp;    temp = c(gamma); c(gamma) = c(k); c(k) = temp;    %menghitung matriks householder    x = R(gamma:end,gamma); e = zeros(length(x),1); e(1) =1; alpha = sign(x(1))*norm(x)*e; v = x + alpha; H = eye(m); H(gamma:m, gamma:m) = eye(m-gamma+1) - 2*v*v'/(v'*v);    R = H*R; Q = H*Q;    for i = gamma + 1:n      c(i) = c(i) - (Q(gamma,i)^2);    end    if gamma < n      tau = max(c(:,gamma+1:n));      for j = gamma+ 1:n        if c(j) == tau          k = j;          break        end      endfor     else       tau = 0;     end   endwhile   Q = Q';Q = Q(:,1:n); R = R(1:n,:); endfunction                                              